version: '3.8'

services:
  # Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: grafana-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./frontend:/usr/share/nginx/html:ro
    depends_on:
      - auth-service
      - grafana
    networks:
      - grafana-network
    restart: unless-stopped

  # Go认证服务
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: grafana-auth-service
    environment:
      - JWT_SECRET=your-secret-key-change-in-production
    networks:
      - grafana-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana服务
  grafana:
    image: grafana/grafana:latest
    container_name: grafana-server
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_ROOT_URL=http://localhost/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana-storage:/var/lib/grafana
    networks:
      - grafana-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  grafana-storage:
    driver: local

networks:
  grafana-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16