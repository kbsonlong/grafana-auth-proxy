server {
    listen 80;
    server_name localhost;

    # 认证服务的内部location，用于auth_request
    location = /auth {
        internal;
        proxy_pass http://auth-service/api/auth;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Original-Method $request_method;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $host;
        # 重要：不要设置proxy_redirect，避免循环
    }

    # 静态文件 - 不需要认证
    location /static/ {
        root /usr/share/nginx/html;
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # 登录页面 - 不需要认证
    location = / {
        root /usr/share/nginx/html;
        try_files /index.html =404;
    }

    # API路由 - 代理到认证服务
    location /api/ {
        proxy_pass http://auth-service/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Content-Type $content_type;
        proxy_set_header Cookie $http_cookie;
    }



    # Grafana主应用 - 需要认证 (带斜杠)
    location /grafana/ {
        # 使用auth_request进行认证检查
        auth_request /auth;
        
        # 认证失败时重定向到登录页面
        error_page 401 = @login_redirect;
        
        # 从认证服务获取用户信息头部变量
        auth_request_set $auth_user $upstream_http_x_webauth_user;
        auth_request_set $auth_email $upstream_http_x_webauth_email;
        auth_request_set $auth_name $upstream_http_x_webauth_name;
        auth_request_set $auth_role $upstream_http_x_webauth_role;
        auth_request_set $auth_permissions $upstream_http_x_webauth_permissions;
        
        # 代理到Grafana
        proxy_pass http://grafana/grafana/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 传递认证头部到Grafana
        proxy_set_header X-WEBAUTH-USER $auth_user;
        proxy_set_header X-WEBAUTH-EMAIL $auth_email;
        proxy_set_header X-WEBAUTH-NAME $auth_name;
        proxy_set_header X-WEBAUTH-ROLE $auth_role;
        proxy_set_header X-WEBAUTH-PERMISSIONS $auth_permissions;
        
        # Grafana特定配置
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_buffering off;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 禁用重定向处理
        proxy_redirect off;
    }

    # Grafana主应用 - 需要认证 (不带斜杠，重定向到带斜杠)
    location = /grafana {
        return 301 /grafana/;
    }

    # 登录重定向处理 - 关键：避免循环重定向
    location @login_redirect {
        # 检查请求是否已经在登录页面，避免循环
        if ($request_uri = "/") {
            return 401;
        }
        # 重定向到登录页面，但不包含原始URI以避免循环
        return 302 /;
    }

    # 健康检查
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 错误页面
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}